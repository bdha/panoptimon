#!/usr/bin/env ruby
# Copyright (C) 2014 Cisco, Inc.

require 'json'
require 'ostruct'

require 'panoptimon/util'

config = ARGV[0] ? JSON::parse(ARGV[0]) : {'interval' => 60, 'kstats' => []}

$stdout.sync = true

get_stats = ->() {
  Panoptimon::Util.os(
    solaris: ->() {
      ->() {
        if (config.include?('kstats') && config['kstats'].length > 0)
          kstats = config['kstats'].join(' ');
          stats = %x[kstat -p #{kstats}].split("\n").map { |line|
            line.split("\t")
          };
        end
      }
    },
  )

}[]

while(true) do
  stats = get_stats[];
  if stats
    puts JSON::generate(Hash[stats]);
  else
    puts "{}"
  end
  break unless config.include?('interval')
  sleep config['interval']
end
