#!/usr/bin/env ruby

require 'json'
require 'panoptimon/util'

def update_vuln_db
  %x{/opt/local/sbin/pkg_admin fetch-pkg-vulnerabilities}
end

vuln_cmd = ""

Panoptimon::Util.os(
  linux: ->(){
    vuln_cmd = "apt-get update -qq && apt-get upgrade -s | grep ^Inst | grep Debian-Security | awk '{print $2}' | sort | uniq | wc -l"
  },

  solaris: ->(){
    vuln_cmd  = "/opt/local/sbin/pkg_admin audit | awk '{print $2}' | sort | uniq | wc -l | awk '{print $1}'"

    vuln_db   = "/opt/local/pkg/pkg-vulnerabilities"

    unless File.exist?(vuln_db)
      update_vuln_db
    end

    age = (Time.now - File.stat(vuln_db).mtime).to_i / 86400.0

    if age >= 1
      update_vuln_db
    end
  }
)

vuln_out = %x{#{vuln_cmd}}.chomp


out = { 
  :package_vulns => vuln_out,
}

puts JSON::generate(out)
